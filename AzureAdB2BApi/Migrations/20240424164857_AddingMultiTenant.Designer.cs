// <auto-generated />
using System;
using AzureAdB2BApi.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AzureAdB2BApi.Migrations
{
    [DbContext(typeof(InvitationsDbContext))]
    [Migration("20240424164857_AddingMultiTenant")]
    partial class AddingMultiTenant
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AzureAdB2BApi.Models.TenantInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Identifier")
                        .IsUnique()
                        .HasFilter("[Identifier] IS NOT NULL");

                    b.ToTable("TenantInfo");
                });

            modelBuilder.Entity("AzureAdB2BApi.Models.UserInvitation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DelegatedUserManagementRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ExpiresTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("InvitationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserInvitations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("50696915-9dca-4753-9c1c-3317d9c3062c"),
                            CreatedBy = "system",
                            CreatedTime = new DateTimeOffset(new DateTime(2024, 4, 24, 12, 48, 56, 886, DateTimeKind.Unspecified).AddTicks(7079), new TimeSpan(0, -4, 0, 0, 0)),
                            CustomerId = new Guid("2e3887da-2ff7-4554-b73f-7eb1d95d2bf1"),
                            DelegatedUserManagementRole = "CompanyAdmin",
                            ExpiresTime = new DateTimeOffset(new DateTime(2024, 4, 24, 12, 48, 56, 886, DateTimeKind.Unspecified).AddTicks(7131), new TimeSpan(0, -4, 0, 0, 0)),
                            InvitationCode = "2XHKG7BFX7"
                        },
                        new
                        {
                            Id = new Guid("2c5dda4c-78a6-4f7f-a991-964a7f199943"),
                            CreatedBy = "system",
                            CreatedTime = new DateTimeOffset(new DateTime(2024, 4, 24, 12, 48, 56, 886, DateTimeKind.Unspecified).AddTicks(7150), new TimeSpan(0, -4, 0, 0, 0)),
                            CustomerId = new Guid("98741b77-36dc-4df3-b47f-a5ef3e709925"),
                            DelegatedUserManagementRole = "CompanyAdmin",
                            ExpiresTime = new DateTimeOffset(new DateTime(2024, 4, 24, 12, 48, 56, 886, DateTimeKind.Unspecified).AddTicks(7151), new TimeSpan(0, -4, 0, 0, 0)),
                            InvitationCode = "C2VVWCY9WX"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
